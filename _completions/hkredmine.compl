# Completion for hkredmine
# Generated by CmdArgs: http://community.haskell.org/~ndm/cmdargs/
_hkredmine()
{
    # local CMDARGS_DEBUG=1 # uncomment to debug this script

    COMPREPLY=()
    function add { COMPREPLY[((${#COMPREPLY[@]} + 1))]=$1 ; }
    IFS=$'\n\r'

    export CMDARGS_COMPLETE=$((${COMP_CWORD} - 1))
    result=`hkredmine ${COMP_WORDS[@]:1}`

    if [ -n $CMDARGS_DEBUG ]; then
        echo Call \(${COMP_WORDS[@]:1}, $CMDARGS_COMPLETE\) > cmdargs.tmp
        echo $result >> cmdargs.tmp
    fi
    unset CMDARGS_COMPLETE
    unset CMDARGS_COMPLETE_POS

    for x in $result ; do
        case $x in
            VALUE\ *)
                add ${x:6}
                ;;
            FILE\ *)
                local prefix=`expr match "${x:5}" '\([^ ]*\)'`
                local match=`expr match "${x:5}" '[^ ]* \(.*\)'`
                for x in `compgen -f -- "$match"`; do
                    add $prefix$x
                done
                ;;
            DIR\ *)
                local prefix=`expr match "${x:4}" '\([^ ]*\)'`
                local match=`expr match "${x:4}" '[^ ]* \(.*\)'`
                for x in `compgen -d -- "$match"`; do
                    add $prefix$x
                done
                ;;
        esac
    done
    unset IFS

    if [ -n $CMDARGS_DEBUG ]; then
        echo echo COMPREPLY: ${#COMPREPLY[@]} = ${COMPREPLY[@]} >> cmdargs.tmp
    fi
}
complete -o bashdefault -F _hkredmine hkredmine
