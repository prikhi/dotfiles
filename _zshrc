# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="ys"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment to change how often before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want to disable command autocorrection
# DISABLE_CORRECTION="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Uncomment following line if you want to disable marking untracked files under
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(archlinux git colored-man command-not-found pip python screen systemd vi-mode)

source $ZSH/oh-my-zsh.sh

# Modules
autoload -U zcalc

# Options
zstyle ':completion:*' menu select
setopt completealiases
setopt RM_STAR_WAIT
setopt AUTO_CONTINUE

# Environmental Variables
export EDITOR="vim"
export PAGER="less"
export LESSOPEN="| /usr/bin/src-hilite-lesspipe.sh %s"
export LESS=-R
export VBOX_USB=usbfs
export PATH="${PATH}:/home/prikhi/.bin"
export NNTPSERVER="news.gmane.org"

#########
# Aliases
#########
alias svim="sudo vim"
alias c="gcc -g -O2 -Wall -Wextra -Werror --std=c11 -pedantic -Wno-unused-parameter -D_XOPEN_SOURCE=700"
alias zc="zcalc"
alias wine32="WINEPREFIX=~/.wine32 WINEARCH=win32 wine"

# SSH
alias cerberus="ssh admin@cerberus"
alias aphrodite="ssh admin@aphrodite.acorn"
alias vishnu="ssh admin@vishnu.acorn"
alias adonis="ssh prikhi@adonis.acorn"
alias slacktest="ssh admin@SlackTesting.acorn"
alias sese="ssh sese@vps.southernexposure.com -p 8822 -i ~/.ssh/id_rsa"
alias acorn="ssh acorn@vps.southernexposure.com -p 8822 -i ~/.ssh/id_rsa"

# Safety First!
alias rm="rm -i"
alias mv="mv -i"
alias cp="cp -i"

# Arch linux networking - netctl
alias nc-start="sudo netctl start"
alias nc-stop="sudo netctl stop"
alias nc-restart="sudo netctl restart"
alias nc-status="sudo netctl status"

# Arch linux package management - packer
alias pacdow='sudo pacman -Syuw'    # Only download new packages, do not install
alias pacupg='packer -Syu'        # Synchronize with repositories before upgrading packages that are out of date on the local system.
alias pacin='packer -S'           # Install specific package(s) from the repositories
alias pacrep='packer -Si'              # Display information about a given package in the repositories
alias pacreps='packer -Ss'             # Search for package(s) in the repositories

# ls colors
if [ -f ~/.dir_colors ]; then
    eval `dircolors ~/.dir_colors`
fi

# Python2 virtualenv
export VIRTUALENVWRAPPER_PYTHON="/usr/bin/python2.7"
if [ -f "/usr/bin/virtualenvwrapper.sh" ]; then
    source /usr/bin/virtualenvwrapper.sh
 fi

# ALL HAIL THE HYPNOTOAD
fortune -so | cowsay -f hypnotoad


## Fix for special keys (home, end, delete, etc.)
# create a zkbd compatible hash;
# to add other keys to this hash, see: man 5 terminfo
typeset -A key

key[Home]=${terminfo[khome]}
key[End]=${terminfo[kend]}
key[Insert]=${terminfo[kich1]}
key[Delete]=${terminfo[kdch1]}
key[Up]=${terminfo[kcuu1]}
key[Down]=${terminfo[kcud1]}
key[Left]=${terminfo[kcub1]}
key[Right]=${terminfo[kcuf1]}
key[PageUp]=${terminfo[kpp]}
key[PageDown]=${terminfo[knp]}

# setup key accordingly
[[ -n "${key[Home]}"     ]]  && bindkey  "${key[Home]}"     beginning-of-line
[[ -n "${key[End]}"      ]]  && bindkey  "${key[End]}"      end-of-line
[[ -n "${key[Insert]}"   ]]  && bindkey  "${key[Insert]}"   overwrite-mode
[[ -n "${key[Delete]}"   ]]  && bindkey  "${key[Delete]}"   delete-char
[[ -n "${key[Up]}"       ]]  && bindkey  "${key[Up]}"       up-line-or-history
[[ -n "${key[Down]}"     ]]  && bindkey  "${key[Down]}"     down-line-or-history
[[ -n "${key[Left]}"     ]]  && bindkey  "${key[Left]}"     backward-char
[[ -n "${key[Right]}"    ]]  && bindkey  "${key[Right]}"    forward-char
[[ -n "${key[PageUp]}"   ]]  && bindkey  "${key[PageUp]}"   beginning-of-buffer-or-history
[[ -n "${key[PageDown]}" ]]  && bindkey  "${key[PageDown]}" end-of-buffer-or-history

# Finally, make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then
    function zle-line-init () {
        printf '%s' "${terminfo[smkx]}"
    }
    function zle-line-finish () {
        printf '%s' "${terminfo[rmkx]}"
    }
    zle -N zle-line-init
    zle -N zle-line-finish
fi
